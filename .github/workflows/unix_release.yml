run-name: Deploy to ubuntu by @${{ github.actor }}

on:
  push:
    branches:
      - 'pre_alpha'

defaults:
  run:
    shell: bash

env:
  SOURCE_DIR:   ${{ github.workspace }}
  QT_VERSION:   6.5.2
  ARTIFACT:     qt-mva-build.zip

jobs:
  build:
    runs-on:  ubuntu-latest

    steps:
        - name: (1) Checkout repo
            uses: actions/checkout@v3
            with:
                submodules: recursive

		- name: (2) Get all tags for correct version determination
		    working-directory:  ${{ github.workspace }}
		    run: |
		        git fetch --all --tags -f

		- name: (3) Install Qt
		    uses: jurplel/install-qt-action@v3
		    with:
		        version:      ${{ env.QT_VERSION }}
		        host:         linux
		        target:       desktop
		        arch:         gcc_64
		        dir:          ${{ runner.temp }}
		        setup-python: false
		        aqtversion: '==3.1.*'

		- name: (4) Download JOM
		    uses: suisei-cn/actions-download-file@v1
		    with:
		        url:    http://download.qt.io/official_releases/jom/jom.zip
		        target: ${{ runner.temp }}\

		- name: (5) Unzip JOM
		    working-directory: ${{ runner.temp }}
		    run:  |
		              7z x jom.zip -ojom

		- name: (6) Create build directory
		    run:  mkdir ${{ runner.temp }}\build

		- name: (7) Build
		    working-directory: ${{ runner.temp }}\build
		    run:  |
		        cmake ${{ env.SOURCE_DIR }}
		        cmake --build .

		- name: (8) Zip build
		    working-directory: ${{ runner.temp }}
		    run:  |
		          7z a qt-mva-build.zip ${{ runner.temp }}\build\* -r

		- name: (9) Save build artifact
		    uses: actions/upload-artifact@v3
		    with:
		      name: ${{ env.ARTIFACT }}
		      path: ${{ runner.temp }}\${{ env.ARTIFACT }}
