run-name: 'Deploy package by @${{ github.actor }}'
'on':
  push:
    branches:
      - pre_alpha*
defaults:
  run:
    shell: bash
env:
  SOURCE_DIR: '${{ github.workspace }}'
  QT_VERSION: 6.5.1
  ARTIFACT: mva-ubuntu-release
jobs:
  example_matrix:
    strategy:
      matrix:
        os: [ubuntu-latest windows-latest macos-latest]
        include:
           - os: ubuntu-latest
             qt-os: linux
             qt-arch: gcc_64
           - os: windows-latest
             qt-os: windows
             qt-arch: 'win64_msvc2019_64'
           - os: macos-latest
             qt-os: mac
             qt-arch: 'clang_64'
    runs-on: ${{ matrix.os }}
    steps:
      - name: (1) Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: (2) Get all tags for correct version determination
        working-directory: '${{ github.workspace }}'
        run: |
          git fetch --all --tags -f

      - name: (3) Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '${{ env.QT_VERSION }}'
          host: ${{ matrix.qt-os }}
          target: desktop
          arch: ${{ matrix.qt-arch }}
          dir: '${{ runner.temp }}'
          setup-python: false
          aqtversion: ==3.1.*
          modules: 'qtmultimedia' 

      - name: (3.1) Install Latex on ubuntu
        if: startsWith(matrix.os, 'ubuntu')
        working-directory: '${{ github.workspace }}'
        run: |
          sudo apt-get update && sudo apt-get upgrade
          sudo apt-get install -y texlive-latex-extra latexmk

      - name: (3.1) Install Latex on windows
        if: startsWith(matrix.os, 'windows')
        working-directory: '${{ github.workspace }}'
        shell: bash
        env:
          MIKTEX_ZIP: miktexsetup-5.5.0+1763023-x64.zip
          MIKTEX_BASE_URL: 'https://ctan.math.illinois.edu/systems/win32/miktex'
          LOCAL_MIKTEX_REPO: 'C:/MiKTeX-Repo'
          BIN_DIR_WINDOWS:      'C:/Program Files/MiKTeX/miktex/bin/x64/'
          BIN_DIR_WINDOWS_UNIX: '/c/Program Files/MiKTeX/miktex/bin/x64/'
        run: |
          curl --location --remote-name $MIKTEX_BASE_URL/setup/windows-x64/$MIKTEX_ZIP
          unzip $MIKTEX_ZIP

          ./miktexsetup_standalone --verbose \
            --local-package-repository=$LOCAL_MIKTEX_REPO \
            --remote-package-repository="$MIKTEX_BASE_URL/tm/packages/" \
            --package-set=essential \
            download

          ./miktexsetup_standalone --verbose \
            --local-package-repository=$LOCAL_MIKTEX_REPO \
            --package-set=essential \
            --shared=yes \
            install

          # Adding MiKTeX bin folder to PATH and to GITHUB_PATH
          echo "$BIN_DIR_WINDOWS" >> $GITHUB_PATH
          export PATH="$BIN_DIR_WINDOWS_UNIX:$PATH"

          # Configure MiKTeX to install missing packages on the fly"
          initexmf --admin --verbose --set-config-value='[MPM]AutoInstall=1'
          # Configure default mirror for packages
          mpm --admin --set-repository="$MIKTEX_BASE_URL/tm/packages/"
          mpm --find-updates
          mpm --admin --find-updates

      - name: (3.1) Install Latex on mac
        if: startsWith(matrix.os, 'macos')
        working-directory: '${{ github.workspace }}'
        run: |
          brew install --cask mactex

      - name: (3.2) Setup ffmpeg
        uses: FedericoCarboni/setup-ffmpeg@v2
        id: setup-ffmpeg

      - name: (4) Create build directory
        run: |
          mkdir -p ${{ github.workspace }}/build

      - name: (5) Build
        working-directory: '${{ github.workspace }}/build'
        run: |
          cmake -DCMAKE_BUILD_TYPE=Release ${{ env.SOURCE_DIR }}
          cmake --build .

      - name: (6) Run tests
        working-directory: '${{ github.workspace }}/build'
        run: |
          export QT_QPA_PLATFORM=offscreen
          ctest --output-on-failure 

      - name: (7) Zip build
        working-directory: '${{ github.workspace }}'
        run: |
          7z a qt-mva-build.zip ${{ github.workspace }}/build/* -r
          ls

      - name: (8) Save build artifact
        uses: actions/upload-artifact@v3
        with:
          name: '${{ env.ARTIFACT }}'
          path: '${{ github.workspace }}/build/'
